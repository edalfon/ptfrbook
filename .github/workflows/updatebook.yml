name: Fetch artifact from other repo

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

# Not strictly required when using a PAT, but safe defaults
permissions:
  contents: read

jobs:
  fetch-foreign-artifact:
    runs-on: ubuntu-latest

    # ðŸ”§ EDIT THESE DEFAULTS
    env:
      SRC_OWNER: edalfon         # e.g. octocat
      SRC_REPO: ptfr                    # e.g. project-b
      SRC_WORKFLOW: R-targets.yml                 # workflow file name or numeric workflow ID in the other repo
      ARTIFACT_NAME: quartobook              # exact artifact name to fetch
      OUTPUT_DIR: downloaded_artifact

    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        uses: cli/cli-action@v2

      - name: Find latest successful run in other repo
        id: run
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}     # PAT with at least Actions:read (fine-grained) or repo (classic)
        run: |
          run_id=$(gh api \
            repos/${SRC_OWNER}/${SRC_REPO}/actions/workflows/${SRC_WORKFLOW}/runs \
            -F per_page=50 \
            --jq '[.workflow_runs[] | select(.status=="completed" and .conclusion=="success")] 
                  | sort_by(.run_number) 
                  | reverse 
                  | .[0].id')
          if [ -z "$run_id" ] || [ "$run_id" = "null" ]; then
            echo "No successful runs found for ${SRC_OWNER}/${SRC_REPO} workflow ${SRC_WORKFLOW}." >&2
            exit 1
          fi
          echo "run_id=$run_id" >> "$GITHUB_OUTPUT"

      - name: Get artifact download URL
        id: art
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          url=$(gh api \
            repos/${SRC_OWNER}/${SRC_REPO}/actions/runs/${{ steps.run.outputs.run_id }}/artifacts \
            --jq ".artifacts[] | select(.name==\"${ARTIFACT_NAME}\") | .archive_download_url" | head -n1)
          if [ -z "$url" ]; then
            echo "Artifact '${ARTIFACT_NAME}' not found on run ${{ steps.run.outputs.run_id }}." >&2
            echo "Available artifacts on that run:" >&2
            gh api repos/${SRC_OWNER}/${SRC_REPO}/actions/runs/${{ steps.run.outputs.run_id }}/artifacts --jq '.artifacts[].name' >&2
            exit 1
          fi
          echo "url=$url" >> "$GITHUB_OUTPUT"

      - name: Download & extract artifact
        env:
          TOKEN: ${{ secrets.GH_PAT }}
        run: |
          mkdir -p "$OUTPUT_DIR"
          curl -sSL \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/octet-stream" \
            "${{ steps.art.outputs.url }}" \
            -o artifact.zip
          unzip -q artifact.zip -d "$OUTPUT_DIR"
          rm -f artifact.zip
          echo "Artifact extracted to: $OUTPUT_DIR"

      - name: List downloaded files
        run: ls -laR "$OUTPUT_DIR"
